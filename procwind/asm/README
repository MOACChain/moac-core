MOAC AppChain contracts (Nuwa 1.0.11)

SCS supports multiple contracts to be deployed on one AppChain;
More info can be found at:
https://moac-docs.readthedocs.io/en/latest/subchain/atomicswap.html#atomic-swap-of-moac-asm
中文文档在：
https://moacdocs-chn.readthedocs.io/zh_CN/latest/
To get some testnet moac, please go to https://faucet.moacchina.com/

README                   - Helpful info about the files in the package;

Contracts
ChainBaseASM.sol         - AppChain definition contract, SCS calls this contract to form the AppChain;
DappBasePrivate.sol      - DappControl contract only allows the AppChain owner to deploy DAPPs, 
                           should be the first contract deployed after MicorChain is running, 
                           to handle multiple contracts, required after Nuwa 1.0.9;
DappBasePublic.sol       - DappControl contract allows other users to deploy DAPP than the AppChain owner,
                           should be the first contract deployed after MicorChain is running, 
                           to handle multiple contracts, required after Nuwa 1.0.9;
SubChainProtocolBase.sol - AppChain definition protocol for SCS, SCS calls this contract to register/withdraw from the AppChain.
VnodeProtocolBase.sol    - AppChain definition protocol for VNODE, VNODE calls this contract to 
                           register/withdraw the AppChain and handle the traffic of AppChain to the MotherChain network.

Scripts
callDappExample.js       - Example JS script to call AppChain and Dappbase functions;
deployDappbase.js        - Example JS script to deploy Dappbase on the AppChain;
deployDapp.js            - Example JS script to deploy Dapp on the AppChain after Dappbase is deployed;
deployASM.js             - Example JS script to deploy the ASM AppChain;
mcABIs.js                - ABIs for AST, ASM and DappBase, used by callDappExample;
